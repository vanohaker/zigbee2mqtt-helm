apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  labels:
    {{- include "zigbee2mqtt.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.zigbee2mqtt.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.zigbee2mqtt.deployment.strategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.zigbee2mqtt.deployment.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.zigbee2mqtt.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zigbee2mqtt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.zigbee2mqtt.deployment.initContainer.enabled }}
      initContainers:
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.zigbee2mqtt.deployment.podSecurityContext }}
          securityContext:
            {{- toYaml .Values.zigbee2mqtt.deployment.podSecurityContext | nindent 12 }}
          {{- end }}
          image: {{ include "zigbee2mqtt.image.name" . }}
          imagePullPolicy: {{ .Values.zigbee2mqtt.deployment.image.pullPolicy }}
          {{- if .Values.zigbee2mqtt.deployment.debug }}
          command:
            - "/bin/bash"
            - "-c"
          args:
            - "sleep infinity"
          {{- end }}
          {{- if .Values.zigbee2mqtt.deployment.frontend.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.zigbee2mqtt.deployment.frontend.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.zigbee2mqtt.deployment.resources }}
          resources:
            {{- toYaml .Values.zigbee2mqtt.deployment.resources | nindent 12 }}
          {{- end }}
          {{- if or .Values.persistent.enabled .Values.zigbee2mqtt.deployment.devicePath }}
          volumeMounts:
            - name: zigbee2mqtt-config
              mountPath: /app/data/configuration.yaml
              subPath: configuration.yaml
          {{- if .Values.persistent.enabled }}
            - mountPath: "/app/data"
              name: zigbee2mqtt-data
          {{- end }}
          {{- if .Values.zigbee2mqtt.deployment.devicePath }}
            - mountPath: "/dev/ttyUSB0"
              name: zigbeedongle
          {{- end }}
          {{- end }}
      {{- with .Values.zigbee2mqtt.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.zigbee2mqtt.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.zigbee2mqtt.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: zigbee2mqtt-config
        configMap:
          name: {{ include "zigbee2mqtt.fullname" . }}
      {{- if or .Values.persistent.enabled .Values.zigbee2mqtt.deployment.devicePath }}
      - name: zigbee2mqtt-data
      {{- if .Values.persistent.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "zigbee2mqtt.pvc.name" . }}
      {{- else }}
        emptyDir:
          sizeLimit: 500Mi
      {{- end }}
      {{- if .Values.zigbee2mqtt.deployment.devicePath }}
      - name: zigbeedongle
        hostPath:
          path: {{ .Values.zigbee2mqtt.deployment.devicePath }}
          type: CharDevice
      {{- end }}
      {{- end }}